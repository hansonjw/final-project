[{"/Users/justinhanson/prepos/final-project/client/src/index.js":"1","/Users/justinhanson/prepos/final-project/client/src/reportWebVitals.js":"2","/Users/justinhanson/prepos/final-project/client/src/App.js":"3","/Users/justinhanson/prepos/final-project/client/src/utils/auth.js":"4","/Users/justinhanson/prepos/final-project/client/src/pages/Home.js":"5","/Users/justinhanson/prepos/final-project/client/src/components/NavBar.js":"6","/Users/justinhanson/prepos/final-project/client/src/components/Footer.js":"7","/Users/justinhanson/prepos/final-project/client/src/pages/Login.js":"8","/Users/justinhanson/prepos/final-project/client/src/pages/Signup.js":"9","/Users/justinhanson/prepos/final-project/client/src/utils/mutations.js":"10","/Users/justinhanson/prepos/final-project/client/src/pages/NoMatch.js":"11","/Users/justinhanson/prepos/final-project/client/src/utils/API.js":"12","/Users/justinhanson/prepos/final-project/client/src/components/StockChart.js":"13","/Users/justinhanson/prepos/final-project/client/src/utils/queries.js":"14","/Users/justinhanson/prepos/final-project/client/src/pages/SinglePerspective.js":"15","/Users/justinhanson/prepos/final-project/client/src/components/StockQuery.js":"16","/Users/justinhanson/prepos/final-project/client/src/components/AddPerspective.js":"17","/Users/justinhanson/prepos/final-project/client/src/components/perspectiveList.js":"18","/Users/justinhanson/prepos/final-project/client/src/components/PerspectiveList.js":"19","/Users/justinhanson/prepos/final-project/client/src/components/CommentList.js":"20"},{"size":500,"mtime":1611287915185,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1611287915187,"results":"23","hashOfConfig":"22"},{"size":1710,"mtime":1611373040991,"results":"24","hashOfConfig":"22"},{"size":1490,"mtime":1611287915190,"results":"25","hashOfConfig":"22"},{"size":403,"mtime":1611376622251,"results":"26","hashOfConfig":"22"},{"size":1343,"mtime":1611376663449,"results":"27","hashOfConfig":"22"},{"size":702,"mtime":1611373188801,"results":"28","hashOfConfig":"22"},{"size":2354,"mtime":1611376551378,"results":"29","hashOfConfig":"22"},{"size":2565,"mtime":1611377656695,"results":"30","hashOfConfig":"22"},{"size":1709,"mtime":1611287915190,"results":"31","hashOfConfig":"22"},{"size":167,"mtime":1611368735373,"results":"32","hashOfConfig":"22"},{"size":281,"mtime":1611287915189,"results":"33","hashOfConfig":"22"},{"size":775,"mtime":1611367411886,"results":"34","hashOfConfig":"22"},{"size":1325,"mtime":1611287915190,"results":"35","hashOfConfig":"22"},{"size":2520,"mtime":1611368743912,"results":"36","hashOfConfig":"22"},{"size":2986,"mtime":1611289635643,"results":"37","hashOfConfig":"22"},{"size":2146,"mtime":1611327407225,"results":"38","hashOfConfig":"22"},{"size":897,"mtime":1611283792895,"results":"39","hashOfConfig":"22"},{"size":769,"mtime":1611289617276,"results":"40","hashOfConfig":"22"},{"size":481,"mtime":1611287915182,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6wzqyq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/justinhanson/prepos/final-project/client/src/index.js",[],["86","87"],"/Users/justinhanson/prepos/final-project/client/src/reportWebVitals.js",[],"/Users/justinhanson/prepos/final-project/client/src/App.js",["88"],"/Users/justinhanson/prepos/final-project/client/src/utils/auth.js",[],"/Users/justinhanson/prepos/final-project/client/src/pages/Home.js",[],"/Users/justinhanson/prepos/final-project/client/src/components/NavBar.js",["89","90","91"],"/Users/justinhanson/prepos/final-project/client/src/components/Footer.js",["92","93"],"/Users/justinhanson/prepos/final-project/client/src/pages/Login.js",["94","95","96"],"/Users/justinhanson/prepos/final-project/client/src/pages/Signup.js",["97","98","99"],"/Users/justinhanson/prepos/final-project/client/src/utils/mutations.js",[],"/Users/justinhanson/prepos/final-project/client/src/pages/NoMatch.js",[],"/Users/justinhanson/prepos/final-project/client/src/utils/API.js",[],"/Users/justinhanson/prepos/final-project/client/src/components/StockChart.js",[],"/Users/justinhanson/prepos/final-project/client/src/utils/queries.js",[],"/Users/justinhanson/prepos/final-project/client/src/pages/SinglePerspective.js",["100"],"import React, { useState } from 'react';\n\nimport Auth from '../utils/auth';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_GET_PERSPECTIVE } from '../utils/queries';\nimport { ADD_COMMENT } from '../utils/mutations';\nimport CommentList from '../components/CommentList';\n\n \nconst SinglePerspective = () => {\n\n    // get _id from paramter in url\n    const { id: perspectiveId } = useParams();\n    const [commentText, setText] = useState('');\n    const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n    // get single perspective data based on parameter\n    const { loading, data } = useQuery(QUERY_GET_PERSPECTIVE,{\n        variables: { _id: perspectiveId }\n    })\n\n    const perspectiveData = data?.perspective || [];\n    const commentsAr = data?.perspective.comments || [];\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    const handleChange = event => {\n        setText(event.target.value);\n    }\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            await addComment({\n                variables: { perspectiveId: perspectiveId, text: commentText }\n            })\n            setText('');\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n\n    return (\n        <div class=\"body\">>\n            <h2>Single Perspective Page</h2>\n            {Auth.loggedIn() &&\n                <form onSubmit={handleFormSubmit}>\n                    <textarea\n                        placeholder=\"new comment...\"\n                        value={commentText}\n                        onChange={handleChange}\n                    ></textarea>\n                    <button type=\"submit\">\n                        Add a comment\n                    </button>\n                </form>}\n            <div>\n                <p>{perspectiveData.security}</p>\n                <p>{perspectiveData._id}</p>\n                <p>{perspectiveData.text}</p>\n                <p>{perspectiveData.email}</p>\n                <p>{perspectiveData.date}</p>\n                {/* {commentsAr.map(aComment => (\n                    <div>\n                        <p>Comment ID: {aComment._id}</p>\n                        <p>{aComment.commentText}</p>\n                        <p>Comment from: {aComment.email}</p>\n                    </div>\n                ))} */}\n                <CommentList comments={commentsAr}></CommentList>\n            </div>\n        </div>\n    );\n};\n\nexport default SinglePerspective","/Users/justinhanson/prepos/final-project/client/src/components/StockQuery.js",["101"],"import React, { useState } from 'react';\nimport { fetchSecurityData } from '../utils/API';\n\nimport StockChart from './StockChart.js';\nimport PerspectiveList from './PerspectiveList.js';\nimport AddPerspective from './AddPerspective.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_GET_SECURITY } from '../utils/queries';\n\n\nconst StockQuery = () => {\n\n    const [searchTicker, setSearchTicker] = useState('');\n    const [ticker, setTicker] = useState('');\n    const [stockData, setStockData] = useState('');\n\n    const handleChange = event => {\n        setSearchTicker(event.target.value.toUpperCase());\n    };\n\n    // API call to alphavantage...\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // need to refactor this into the component instead of direct on this page\n        // idea: submit ticker to component and API...all data munging should happen there, not here... \n        try {\n            const response = await fetchSecurityData(searchTicker);\n\n            if(!response.ok) {\n                throw new Error('something is amiss...check your ticker symbol')\n            }\n\n            const securityData = await response.json().then(function(data) {\n                \n                const headers = ['date', 'price'];\n                const rawData = data['Time Series (Daily)'];\n                const stockData = []\n\n                for (const property in rawData) {\n                    let aDate = property;\n                    let aPrice = Number(rawData[property]['5. adjusted close']);\n                    stockData.push([aDate, aPrice]);\n                };\n                // add headers then flip data set so dates go in chronological order\n                stockData.push(headers);\n                stockData.reverse();\n                return stockData;\n            });\n            \n            setStockData(securityData);\n            setTicker(searchTicker);\n            setSearchTicker('');\n        } catch(err) {\n            console.error(err);\n        }\n    };\n\n    // get perspectives from ticker\n    const { loading, data } = useQuery(QUERY_GET_SECURITY, {\n        variables: { ticker: ticker }\n    });\n    const perspectiveData = data?.getSecurity || [];\n\n\n    return (\n        <div>\n            <h1>Stock Query Component</h1>\n\n            <form onSubmit={handleFormSubmit}>\n\n                <label>Get price data:</label>\n                <input\n                    placeholder=\"enter a ticker symbol\"\n                    name=\"tickerSymbol\"\n                    value={searchTicker}\n                    onChange={handleChange}\n                    type=\"text\"\n                />\n                <button type='submit'>\n                    Get Data\n                </button>\n            </form>\n            <StockChart chartData={stockData} />\n            <AddPerspective ticker={ticker} />\n            <PerspectiveList perspectiveData={perspectiveData} />\n        </div>\n    )\n}\n\nexport default StockQuery;","/Users/justinhanson/prepos/final-project/client/src/components/AddPerspective.js",["102","103"],"import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_PERSPECTIVE } from '../utils/mutations';\nimport { QUERY_GET_PERSPECTIVES, QUERY_ME } from '../utils/queries';\n\n// import GetPerspectives from './GetPerspectives.js';\n\nconst AddPerspective = (tickerSymbol) => {\n\n  // const { ticker } = useParams();\n\n  // can't quite get this cache thing to work...\n  // could do something using links instead of buttons...\n  const [perspectiveText, setText] = useState('');\n  const [addPerspective, { error }] = useMutation(ADD_PERSPECTIVE, {\n    update(cache, { data: { addPerspective } }) {\n      try {\n        const { perspectives } = cache.readQuery({ query: QUERY_GET_PERSPECTIVES });\n        cache.writeQuery({\n          query: QUERY_GET_PERSPECTIVES,\n          data: { perspectives: [addPerspective, ...perspectives] }\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      console.log(cache);\n\n      const { perspectives } = cache.readQuery({ query: QUERY_GET_PERSPECTIVES });\n      cache.writeQuery({\n        query: QUERY_GET_PERSPECTIVES,\n          data: { perspectives: [addPerspective, ...perspectives] }\n      });\n    }\n  });\n\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    console.log('button was pushed');\n    console.log(tickerSymbol.ticker);\n    console.log(perspectiveText);\n    try {\n      await addPerspective({\n        variables: { text: perspectiveText, security: tickerSymbol.ticker }\n      });\n    } catch(e) {\n      console.error(e);\n    }\n    // clear form value\n    setText('');\n  }\n\n  if (!tickerSymbol.ticker){\n    return <h3>...</h3>\n  }\n\n  return (\n    <div>\n      <h1>Add Perspective Component</h1>\n      <h2>{tickerSymbol.ticker}</h2>\n      <form onSubmit={handleFormSubmit}>\n        <textarea\n          placeholder=\"Add a new perspective...\"\n          value={perspectiveText}\n          onChange={handleChange}\n        ></textarea>\n        <button type=\"submit\">Submit Perspective</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddPerspective","/Users/justinhanson/prepos/final-project/client/src/components/perspectiveList.js",["104","105","106","107"],"/Users/justinhanson/prepos/final-project/client/src/components/PerspectiveList.js",[],"/Users/justinhanson/prepos/final-project/client/src/components/CommentList.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":26,"nodeType":"114","messageId":"115","endLine":5,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"116","line":4,"column":46,"nodeType":"114","messageId":"115","endLine":4,"endColumn":50},{"ruleId":"112","severity":1,"message":"117","line":4,"column":52,"nodeType":"114","messageId":"115","endLine":4,"endColumn":58},{"ruleId":"112","severity":1,"message":"113","line":2,"column":24,"nodeType":"114","messageId":"115","endLine":2,"endColumn":27},{"ruleId":"112","severity":1,"message":"118","line":2,"column":29,"nodeType":"114","messageId":"115","endLine":2,"endColumn":35},{"ruleId":"112","severity":1,"message":"119","line":5,"column":17,"nodeType":"114","messageId":"115","endLine":5,"endColumn":27},{"ruleId":"112","severity":1,"message":"120","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":19},{"ruleId":"112","severity":1,"message":"121","line":10,"column":3,"nodeType":"114","messageId":"115","endLine":10,"endColumn":17},{"ruleId":"112","severity":1,"message":"119","line":5,"column":17,"nodeType":"114","messageId":"115","endLine":5,"endColumn":27},{"ruleId":"112","severity":1,"message":"120","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":19},{"ruleId":"112","severity":1,"message":"121","line":10,"column":3,"nodeType":"114","messageId":"115","endLine":10,"endColumn":17},{"ruleId":"112","severity":1,"message":"122","line":16,"column":26,"nodeType":"114","messageId":"115","endLine":16,"endColumn":31},{"ruleId":"112","severity":1,"message":"123","line":60,"column":13,"nodeType":"114","messageId":"115","endLine":60,"endColumn":20},{"ruleId":"112","severity":1,"message":"124","line":5,"column":34,"nodeType":"114","messageId":"115","endLine":5,"endColumn":42},{"ruleId":"112","severity":1,"message":"122","line":16,"column":28,"nodeType":"114","messageId":"115","endLine":16,"endColumn":33},{"ruleId":"112","severity":1,"message":"125","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"126","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"127","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"112","severity":1,"message":"128","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":28},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Text' is defined but never used.","'Button' is defined but never used.","'Spacer' is defined but never used.","'SimpleGrid' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'QUERY_ME' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useQuery' is defined but never used.","'QUERY_GET_SECURITY' is defined but never used.","no-global-assign","no-unsafe-negation"]