[{"/Users/justinhanson/prepos/final-project/client/src/index.js":"1","/Users/justinhanson/prepos/final-project/client/src/reportWebVitals.js":"2","/Users/justinhanson/prepos/final-project/client/src/App.js":"3","/Users/justinhanson/prepos/final-project/client/src/utils/auth.js":"4","/Users/justinhanson/prepos/final-project/client/src/pages/Home.js":"5","/Users/justinhanson/prepos/final-project/client/src/components/NavBar.js":"6","/Users/justinhanson/prepos/final-project/client/src/components/Footer.js":"7","/Users/justinhanson/prepos/final-project/client/src/pages/Login.js":"8","/Users/justinhanson/prepos/final-project/client/src/pages/Signup.js":"9","/Users/justinhanson/prepos/final-project/client/src/utils/mutations.js":"10","/Users/justinhanson/prepos/final-project/client/src/pages/NoMatch.js":"11","/Users/justinhanson/prepos/final-project/client/src/utils/API.js":"12","/Users/justinhanson/prepos/final-project/client/src/components/StockChart.js":"13","/Users/justinhanson/prepos/final-project/client/src/utils/queries.js":"14","/Users/justinhanson/prepos/final-project/client/src/pages/SinglePerspective.js":"15","/Users/justinhanson/prepos/final-project/client/src/components/StockQuery.js":"16","/Users/justinhanson/prepos/final-project/client/src/components/AddPerspective.js":"17","/Users/justinhanson/prepos/final-project/client/src/components/perspectiveList.js":"18","/Users/justinhanson/prepos/final-project/client/src/components/PerspectiveList.js":"19","/Users/justinhanson/prepos/final-project/client/src/components/CommentList.js":"20","/Users/justinhanson/prepos/final-project/client/src/themes.js":"21"},{"size":500,"mtime":1611287915185,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1611287915187,"results":"24","hashOfConfig":"23"},{"size":1650,"mtime":1611450094207,"results":"25","hashOfConfig":"23"},{"size":1490,"mtime":1611287915190,"results":"26","hashOfConfig":"23"},{"size":914,"mtime":1611509769234,"results":"27","hashOfConfig":"23"},{"size":1694,"mtime":1611509851576,"results":"28","hashOfConfig":"23"},{"size":894,"mtime":1611508271617,"results":"29","hashOfConfig":"23"},{"size":2735,"mtime":1611450094216,"results":"30","hashOfConfig":"23"},{"size":3061,"mtime":1611452506101,"results":"31","hashOfConfig":"23"},{"size":1709,"mtime":1611287915190,"results":"32","hashOfConfig":"23"},{"size":166,"mtime":1611452260606,"results":"33","hashOfConfig":"23"},{"size":281,"mtime":1611287915189,"results":"34","hashOfConfig":"23"},{"size":1270,"mtime":1611450173149,"results":"35","hashOfConfig":"23"},{"size":1325,"mtime":1611287915190,"results":"36","hashOfConfig":"23"},{"size":3408,"mtime":1611450094218,"results":"37","hashOfConfig":"23"},{"size":3718,"mtime":1611450094213,"results":"38","hashOfConfig":"23"},{"size":2911,"mtime":1611450094208,"results":"39","hashOfConfig":"23"},{"size":897,"mtime":1611283792895,"results":"40","hashOfConfig":"23"},{"size":1787,"mtime":1611454682710,"results":"41","hashOfConfig":"23"},{"size":911,"mtime":1611450094208,"results":"42","hashOfConfig":"23"},{"size":157,"mtime":1611450094218,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"6wzqyq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"/Users/justinhanson/prepos/final-project/client/src/index.js",[],["98","99"],"/Users/justinhanson/prepos/final-project/client/src/reportWebVitals.js",[],"/Users/justinhanson/prepos/final-project/client/src/App.js",["100"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport ApolloClient from 'apollo-boost';\nimport { ChakraProvider, Box } from \"@chakra-ui/react\"\n\n\n// import pages and components...as you develop them...\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport NoMatch from './pages/NoMatch';\nimport SinglePerspective from './pages/SinglePerspective';\n\n\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ChakraProvider>  \n      <ApolloProvider client={client}>\n              <Router>\n                <div className=\"mainpage\">\n                  <NavBar />\n\n                      <Switch>\n                          <Route exact path=\"/\" component={Home} />\n                          <Route exact path=\"/login\" component={Login} />\n                          <Route exact path=\"/signup\" component={Signup} />\n                          <Route exact path=\"/singleperspective/:id\" component={SinglePerspective} />\n                          <Route component={NoMatch} />\n                      </Switch>\n                    \n                  <Footer />\n                </div>\n              </Router>\n      </ApolloProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n\n","/Users/justinhanson/prepos/final-project/client/src/utils/auth.js",[],"/Users/justinhanson/prepos/final-project/client/src/pages/Home.js",["101","102"],"/Users/justinhanson/prepos/final-project/client/src/components/NavBar.js",["103","104"],"/Users/justinhanson/prepos/final-project/client/src/components/Footer.js",["105","106","107"],"import React from 'react';\nimport { Flex, Center, Box, Spacer } from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer\">\n      <Flex\n        as=\"nav\"\n        align=\"center\"\n        justify=\"space-between\"\n        wrap=\"wrap\"\n        padding=\".5rem\"\n        bg=\"#1a0a00\"\n        color=\"white\"\n      >\n\n          <Center w=\"300px\" id='footeritem'>\n            ...site built by Justin Hanson\n          </Center>\n          <Spacer/>\n          <Center w=\"300px\" _hover={{ color: \"#e65c00\" }}>\n            <a href=\"https://en.wikipedia.org/wiki/Otium\" target=\"_blank\">wealth and progress...</a>\n          </Center>\n          <Spacer/>\n          <Center w=\"300px\" id='footeritem' _hover={{ color: \"#e65c00\" }}>\n            <a href=\"https://twitter.com/hansonjw\" target=\"_blank\">Twitter</a>\n          </Center>\n\n      </Flex>\n    </footer>\n  );\n};\n\nexport default Footer;","/Users/justinhanson/prepos/final-project/client/src/pages/Login.js",["108","109","110"],"import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { Input, SimpleGrid, Center, Button, Stack, Text, Box } from '@chakra-ui/react';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n} from \"@chakra-ui/react\"\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div class=\"body\">\n\n        <Center>\n        <Stack spacing={5}>\n          <Center>\n            <Text fontSize=\"3xl\" color='white'>Login Page</Text>\n          </Center>\n          <form onSubmit={handleFormSubmit}>\n            <FormControl>\n              <Stack spacing={7}>\n                <Box Box w={[200, 400]}>\n                  <Box py='3'>\n                    <FormLabel htmlFor=\"email\" color='white'>Email address:</FormLabel>\n                    <Input\n                      placeholder=\"youremail@test.com\"\n                      name=\"email\"\n                      type=\"email\"\n                      id=\"email\"\n                      bg='white'\n                      borderColor=\"#e65c00\"\n                      onChange={handleChange}\n                    />\n                  </Box>\n\n                  <Box py='3'>\n                    <FormLabel htmlFor=\"pwd\" color='white'>Password:</FormLabel>\n                    <Input\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      id=\"pwd\"\n                      bg='white'\n                      borderColor=\"#e65c00\"\n                      onChange={handleChange}\n                    />\n                  </Box>\n\n\n                  {\n                    error ? <div>\n                      <Text color=\"white\" >The provided credentials are incorrect</Text>\n                    </div> : null\n                  }\n                </Box>\n                <Button type=\"submit\" bg=\"#e65c00\" color='white'>\n                  Login\n                </Button>\n              </Stack>\n            </FormControl>\n          </form>\n        </Stack>\n        </Center>\n\n    </div>\n  );\n}\n\n\nexport default Login;","/Users/justinhanson/prepos/final-project/client/src/pages/Signup.js",["111","112"],"import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { CREATE_USER } from \"../utils/mutations\";\nimport { Input, Center, Button, Stack, Text, Box } from '@chakra-ui/react';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n} from \"@chakra-ui/react\"\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [createUser] = useMutation(CREATE_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await createUser({\n      variables: {\n        email: formState.email, password: formState.password, displayName: formState.displayName\n      }\n    });\n    const token = mutationResponse.data.createUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div class=\"body\">\n      <Center>\n        <Stack spacing={5}>\n          <Center>\n            <Text fontSize=\"3xl\" color='white'>Sign Up Page</Text>\n          </Center>\n          <form onSubmit={handleFormSubmit}>\n            <FormControl>\n              <Stack spacing={5}>\n                <Box Box w={[200, 400]}>\n\n                  <Box py='3'>\n                    <FormLabel htmlFor=\"displayName\" color='white'>Display Name:</FormLabel>\n                    <Input\n                      placeholder=\"Display Name\"\n                      name=\"displayName\"\n                      type=\"displayName\"\n                      id=\"displayName\"\n                      bg='white'\n                      borderColor=\"#e65c00\"\n                      onChange={handleChange}\n                    />\n                  </Box>\n\n                  <Box py='3'>\n                    <FormLabel htmlFor=\"email\" color='white'>Email:</FormLabel>\n                    <Input\n                      placeholder=\"youremail@test.com\"\n                      name=\"email\"\n                      type=\"email\"\n                      id=\"email\"\n                      bg='white'\n                      borderColor=\"#e65c00\"\n                      onChange={handleChange}\n                    />\n                  </Box>\n\n                  <Box py='3'>\n                    <FormLabel htmlFor=\"pwd\" color='white'>Password:</FormLabel>\n                    <Input\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      id=\"pwd\"\n                      bg='white'\n                      borderColor=\"#e65c00\"\n                      onChange={handleChange}\n                    />\n                  </Box>\n                \n                </Box>\n              \n                <Button type=\"submit\" bg=\"#e65c00\" color='white'>\n                    Sign Up\n                </Button>\n              </Stack>\n            </FormControl>\n          </form>\n        </Stack>\n      </Center>\n    </div>\n  );\n\n}\n\nexport default Signup;","/Users/justinhanson/prepos/final-project/client/src/utils/mutations.js",[],"/Users/justinhanson/prepos/final-project/client/src/pages/NoMatch.js",[],"/Users/justinhanson/prepos/final-project/client/src/utils/API.js",[],"/Users/justinhanson/prepos/final-project/client/src/components/StockChart.js",["113","114","115","116"],"import React from 'react';\nimport { Stack, Box, Spacer, Heading, Flex, Center, Text, Button } from '@chakra-ui/react';\n\nimport { Chart } from \"react-google-charts\";\n \n \nconst StockChart = (chartData) => {\n\n  const options = {\n    // hAxis: { title: \"Price\", viewWindow: { min: 0, max: 100} },\n    hAxis: { title: \"Date\", format: 'M/d/y' },\n    // vAxis: { title: \"Date\", viewWindow: { min: 0, max: 1000 } },\n    vAxis: { title: \"Price ($/share)\" },\n    legend: \"none\"\n  };\n\n  if (chartData.chartData.length<=1){\n    return (\n      <div></div>\n    )\n  }\n\n  else return (\n    \n        <Stack spacing={5}>\n          <Spacer/>\n          <Center>\n            <Box w={[300, 400, 1000]} borderWidth=\"1px\" borderColor=\"#e65c00\" borderRadius=\"lg\" bg='white'>\n            {/* <Box w=\"60%\" borderWidth=\"1px\" borderColor=\"red.400\" borderRadius=\"lg\" bg='white'> */}\n              <Box p=\"3\">\n              <Chart\n                chartType=\"ScatterChart\"\n                data={chartData.chartData}\n                options={options}\n                width=\"100%\"\n                height=\"400px\"\n                legendToggle\n              />\n              </Box>\n            </Box>\n          </Center>\n          <Spacer/>\n          \n        </Stack>\n  );\n};\n\nexport default StockChart;\n \n","/Users/justinhanson/prepos/final-project/client/src/utils/queries.js",[],"/Users/justinhanson/prepos/final-project/client/src/pages/SinglePerspective.js",["117","118","119","120","121","122","123","124","125","126","127"],"import React, { useState } from 'react';\n\nimport Auth from '../utils/auth';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_GET_PERSPECTIVE } from '../utils/queries';\nimport { ADD_COMMENT } from '../utils/mutations';\nimport CommentList from '../components/CommentList';\n\nimport { Textarea, Divider, Input, VStack, Stack, Box, Spacer, Heading, Flex, Center, Text, Button } from '@chakra-ui/react';\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n} from \"@chakra-ui/react\"\n\n \nconst SinglePerspective = () => {\n\n    // get _id from paramter in url\n    const { id: perspectiveId } = useParams();\n    const [commentText, setText] = useState('');\n    const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n    // get single perspective data based on parameter\n    const { loading, data } = useQuery(QUERY_GET_PERSPECTIVE,{\n        variables: { _id: perspectiveId }\n    })\n\n    const perspectiveData = data?.perspective || [];\n    const commentsAr = data?.perspective.comments || [];\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    const handleChange = event => {\n        setText(event.target.value);\n    }\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            await addComment({\n                variables: { perspectiveId: perspectiveId, text: commentText }\n            })\n            setText('');\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n\n    return (\n        <div class=\"body\">\n            {Auth.loggedIn() && \n            <Center>\n                <Box p=\"3\" w={[300, 400, 1000]}>\n                    <Box>\n                        <Center>\n                            <Text color=\"white\" fontSize={['xl', '4xl', '6xl']}>{perspectiveData.security}</Text>\n                        </Center>\n                        <Box p=\"3\">\n                            <Text fontSize=\"sm\" color='#999999'>Perspective written by: {perspectiveData.email}</Text>\n                            <Text fontSize=\"sm\" color='#999999'>Date: {perspectiveData.date}</Text>\n                            <Text Text fontSize=\"md\" color='white' py=\"3\">{perspectiveData.text}</Text>\n                        </Box>\n                    </Box>\n                    <form onSubmit={handleFormSubmit}>\n                        <FormControl>\n                            <Textarea\n                                placeholder=\"new comment...\"\n                                bg=\"White\"\n                                borderWidth=\"1px\"\n                                borderColor=\"red.400\"\n                                borderRadius=\"lg\"\n                                h={[50, 100]}\n                                value={commentText}\n                                onChange={handleChange}\n                            ></Textarea>\n                            <Center>\n                                <Button type=\"submit\" bg=\"#e65c00\" color='white' my=\"3\">\n                                    Add a comment\n                                </Button>\n                            </Center>\n                        </FormControl>\n                    </form>\n                    <CommentList comments={commentsAr}></CommentList>\n                </Box>\n            </Center>\n            }\n        </div>\n    );\n};\n\nexport default SinglePerspective","/Users/justinhanson/prepos/final-project/client/src/components/StockQuery.js",["128","129","130","131","132","133","134","135"],"import React, { useState } from 'react';\nimport { fetchSecurityData } from '../utils/API';\n\nimport StockChart from './StockChart.js';\nimport PerspectiveList from './PerspectiveList.js';\nimport AddPerspective from './AddPerspective.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_GET_SECURITY } from '../utils/queries';\n\nimport { Input, HStack, Stack, Box, Spacer, Heading, Flex, Center, Text, Button } from '@chakra-ui/react';\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n} from \"@chakra-ui/react\"\n\n\nconst StockQuery = () => {\n\n    const [searchTicker, setSearchTicker] = useState('');\n    const [ticker, setTicker] = useState('');\n    const [stockData, setStockData] = useState('');\n\n    const handleChange = event => {\n        setSearchTicker(event.target.value.toUpperCase());\n    };\n\n    // API call to alphavantage...\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // need to refactor this into the component instead of direct on this page\n        // idea: submit ticker to component and API...all data munging should happen there, not here... \n        try {\n            const response = await fetchSecurityData(searchTicker);\n\n            if(!response.ok) {\n                throw new Error('something is amiss...check your ticker symbol')\n            }\n\n            const securityData = await response.json().then(function(data) {\n                \n                const headers = ['date', 'price'];\n                const rawData = data['Time Series (Daily)'];\n                const stockData = []\n\n                for (const property in rawData) {\n                    let aDate = property;\n                    let aPrice = Number(rawData[property]['5. adjusted close']);\n                    stockData.push([aDate, aPrice]);\n                };\n                // add headers then flip data set so dates go in chronological order\n                stockData.push(headers);\n                stockData.reverse();\n                return stockData;\n            });\n            \n            setStockData(securityData);\n            setTicker(searchTicker);\n            setSearchTicker('');\n        } catch(err) {\n            console.error(err);\n        }\n    };\n\n    // get perspectives from ticker\n    const { loading, data } = useQuery(QUERY_GET_SECURITY, {\n        variables: { ticker: ticker }\n    });\n    const perspectiveData = data?.getSecurity || [];\n\n\n    return (\n        <div>\n            <Center><Stack spacing={5}>\n                <Spacer/>\n                <form onSubmit={handleFormSubmit}>\n                    <FormControl>\n                        <Stack>\n                            <HStack>\n                                <Input\n                                    placeholder=\"Enter a ticker symbol\"\n                                    name=\"tickerSymbol\"\n                                    value={searchTicker}\n                                    onChange={handleChange}\n                                    bg='white'\n                                    borderColor=\"#e65c00\"\n                                    type=\"text\"\n                                />\n                                <Button type=\"submit\" bg=\"#e65c00\" color='white'>\n                                    Get Data\n                                </Button>\n                            </HStack>\n\n                        </Stack>\n                    </FormControl>\n                </form>\n            </Stack></Center>\n            <StockChart chartData={stockData} />\n            <AddPerspective ticker={ticker} />\n            <PerspectiveList perspectiveData={perspectiveData} />\n        </div>\n    )\n}\n\nexport default StockQuery;\n","/Users/justinhanson/prepos/final-project/client/src/components/AddPerspective.js",["136","137","138","139","140","141","142","143","144","145","146"],"import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_PERSPECTIVE } from '../utils/mutations';\nimport { QUERY_GET_PERSPECTIVES, QUERY_ME } from '../utils/queries';\n\nimport { Textarea, Divider, Input, HStack, Stack, Box, Spacer, Heading, Flex, Center, Text, Button } from '@chakra-ui/react';\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n} from \"@chakra-ui/react\"\n\n// import GetPerspectives from './GetPerspectives.js';\n\nconst AddPerspective = (tickerSymbol) => {\n\n  // const { ticker } = useParams();\n\n  // can't quite get this cache thing to work...\n  // could do something using links instead of buttons...\n  const [perspectiveText, setText] = useState('');\n  const [addPerspective, { error }] = useMutation(ADD_PERSPECTIVE, {\n    update(cache, { data: { addPerspective } }) {\n      try {\n        const { perspectives } = cache.readQuery({ query: QUERY_GET_PERSPECTIVES });\n        cache.writeQuery({\n          query: QUERY_GET_PERSPECTIVES,\n          data: { perspectives: [addPerspective, ...perspectives] }\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      console.log(cache);\n\n      const { perspectives } = cache.readQuery({ query: QUERY_GET_PERSPECTIVES });\n      cache.writeQuery({\n        query: QUERY_GET_PERSPECTIVES,\n          data: { perspectives: [addPerspective, ...perspectives] }\n      });\n    }\n  });\n\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    console.log('button was pushed');\n    console.log(tickerSymbol.ticker);\n    console.log(perspectiveText);\n    try {\n      await addPerspective({\n        variables: { text: perspectiveText, security: tickerSymbol.ticker }\n      });\n    } catch(e) {\n      console.error(e);\n    }\n    // clear form value\n    setText('');\n  }\n\n  if (!tickerSymbol.ticker){\n    return <h3>...</h3>\n  }\n\n  return (\n    <div>\n      <Center><Text color=\"white\" fontSize={['xl', '4xl', '6xl']}>{tickerSymbol.ticker}</Text></Center>\n        <Center>\n          <Box p=\"3\" w={[300, 400, 1000]}>\n            <form onSubmit={handleFormSubmit}>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Add a new perspective...\"\n                  bg=\"White\"\n                  borderWidth=\"1px\"\n                  borderColor=\"red.400\"\n                  borderRadius=\"lg\"\n                  h={[100, 300]}\n                  value={perspectiveText}\n                  onChange={handleChange}\n                ></Textarea>\n                <Spacer/>\n                <Center>\n                  <Button type=\"submit\" bg=\"#e65c00\" color='white' my=\"3\">Submit New Perspective</Button>\n                </Center>\n              </FormControl>\n            </form>\n          </Box>\n        </Center>\n    </div>\n  );\n};\n\nexport default AddPerspective","/Users/justinhanson/prepos/final-project/client/src/components/perspectiveList.js",["147","148","149","150"],"/Users/justinhanson/prepos/final-project/client/src/components/PerspectiveList.js",["151","152","153","154","155"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { Divider, VStack, Box, Spacer, Heading, Flex, Center, Text, Button } from '@chakra-ui/react';\nimport { breakpoints } from '../themes';\n\n\nconst PerspectiveList = ({ perspectiveData }) => {\n\n  if (!perspectiveData.length) {\n    return <h3>...</h3>;\n  }\n\n  return (\n    <div>\n      <Spacer/>\n      <Center>\n        <Text fontSize=\"md\" color='#999999'>Current perspectives:</Text>\n      </Center>\n            \n            \n\n      \n      <Spacer/>\n      {perspectiveData.map(aPerspective => (\n        <Spacer>\n        \n        <Center>\n          \n          <Link to={`/singleperspective/${aPerspective._id}`}>\n            <Box w={[300, 400, 1000]} borderWidth=\"1px\" borderColor=\"grey\" borderRadius=\"lg\" my=\"3\" _hover={{ borderColor: \"#e65c00\" }}>\n              {/* <HStack w='100%'> */}\n              <Flex\n                justify=\"space-between\"\n                wrap=\"wrap\"\n                w=\"100%\"\n                p='1'\n              >\n                <Text fontSize=\"xs\" color='#999999'>Posted by: {aPerspective.email}</Text>\n                <Text fontSize=\"xs\" color='#999999'>Date: {aPerspective.date}</Text>\n              </Flex>\n              {/* </HStack>  */}\n              <Box p='1'>\n                <Text fontSize=\"md\" color='white'>{aPerspective.text}</Text>\n              </Box>\n              <Flex\n                justify=\"space-between\"\n                wrap=\"wrap\"\n                w=\"100%\"\n                p='1'\n              >\n                <Text fontSize=\"xs\" color='#999999'>Number of comments:  {aPerspective.comments.length}</Text>\n              </Flex>\n            </Box>\n          </Link>\n        </Center>\n        </Spacer>\n        ))}\n    </div>\n  );\n};\n\nexport default PerspectiveList\n\n\n","/Users/justinhanson/prepos/final-project/client/src/components/CommentList.js",["156"],"import React from 'react';\n\nimport { Divider, VStack, Box, Center, Text } from '@chakra-ui/react';\n\n\nconst CommentList = ({ comments }) => {\n\n    if (!comments.length) {\n        return <div></div>;\n    }\n    \n    return (\n        <div>\n            <Center>\n                <Box p=\"3\" w={[300, 400, 1000]}>\n                    {comments.map(aComment => (\n                        <VStack>\n                            <Box p=\"3\" w={[300, 400, 1000]} borderWidth=\"1px\" borderColor=\"grey\" borderRadius=\"lg\" my=\"3\">\n                                <Text fontSize=\"md\" color='white'>{aComment.commentText}</Text>\n                                <Text fontSize=\"xs\" color='#999999'>Comment posted by: {aComment.email}</Text>\n                            </Box>\n                        </VStack>\n                    ))}   \n                </Box>\n            </Center>\n        </div>\n    );\n};\n\nexport default CommentList\n","/Users/justinhanson/prepos/final-project/client/src/themes.js",["157"],"// theme.js\nexport default {\n    breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"],\n    colors: {\n        \"joe\":{\n            100: '#e65c00'\n        }\n    }\n}\n\n\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":5,"column":26,"nodeType":"164","messageId":"165","endLine":5,"endColumn":29},{"ruleId":"162","severity":1,"message":"166","line":2,"column":18,"nodeType":"164","messageId":"165","endLine":2,"endColumn":28},{"ruleId":"162","severity":1,"message":"167","line":2,"column":38,"nodeType":"164","messageId":"165","endLine":2,"endColumn":44},{"ruleId":"162","severity":1,"message":"168","line":4,"column":23,"nodeType":"164","messageId":"165","endLine":4,"endColumn":30},{"ruleId":"162","severity":1,"message":"167","line":4,"column":52,"nodeType":"164","messageId":"165","endLine":4,"endColumn":58},{"ruleId":"162","severity":1,"message":"163","line":2,"column":24,"nodeType":"164","messageId":"165","endLine":2,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":22,"column":13,"nodeType":"171","endLine":22,"endColumn":75},{"ruleId":"169","severity":1,"message":"170","line":26,"column":13,"nodeType":"171","endLine":26,"endColumn":68},{"ruleId":"162","severity":1,"message":"166","line":5,"column":17,"nodeType":"164","messageId":"165","endLine":5,"endColumn":27},{"ruleId":"162","severity":1,"message":"172","line":9,"column":3,"nodeType":"164","messageId":"165","endLine":9,"endColumn":19},{"ruleId":"162","severity":1,"message":"173","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"172","line":9,"column":3,"nodeType":"164","messageId":"165","endLine":9,"endColumn":19},{"ruleId":"162","severity":1,"message":"173","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"168","line":2,"column":30,"nodeType":"164","messageId":"165","endLine":2,"endColumn":37},{"ruleId":"162","severity":1,"message":"174","line":2,"column":39,"nodeType":"164","messageId":"165","endLine":2,"endColumn":43},{"ruleId":"162","severity":1,"message":"175","line":2,"column":53,"nodeType":"164","messageId":"165","endLine":2,"endColumn":57},{"ruleId":"162","severity":1,"message":"167","line":2,"column":59,"nodeType":"164","messageId":"165","endLine":2,"endColumn":65},{"ruleId":"162","severity":1,"message":"176","line":10,"column":20,"nodeType":"164","messageId":"165","endLine":10,"endColumn":27},{"ruleId":"162","severity":1,"message":"177","line":10,"column":29,"nodeType":"164","messageId":"165","endLine":10,"endColumn":34},{"ruleId":"162","severity":1,"message":"178","line":10,"column":36,"nodeType":"164","messageId":"165","endLine":10,"endColumn":42},{"ruleId":"162","severity":1,"message":"179","line":10,"column":44,"nodeType":"164","messageId":"165","endLine":10,"endColumn":49},{"ruleId":"162","severity":1,"message":"180","line":10,"column":56,"nodeType":"164","messageId":"165","endLine":10,"endColumn":62},{"ruleId":"162","severity":1,"message":"168","line":10,"column":64,"nodeType":"164","messageId":"165","endLine":10,"endColumn":71},{"ruleId":"162","severity":1,"message":"174","line":10,"column":73,"nodeType":"164","messageId":"165","endLine":10,"endColumn":77},{"ruleId":"162","severity":1,"message":"181","line":13,"column":5,"nodeType":"164","messageId":"165","endLine":13,"endColumn":14},{"ruleId":"162","severity":1,"message":"172","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":21},{"ruleId":"162","severity":1,"message":"173","line":15,"column":5,"nodeType":"164","messageId":"165","endLine":15,"endColumn":19},{"ruleId":"162","severity":1,"message":"182","line":24,"column":26,"nodeType":"164","messageId":"165","endLine":24,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":10,"column":32,"nodeType":"164","messageId":"165","endLine":10,"endColumn":35},{"ruleId":"162","severity":1,"message":"168","line":10,"column":45,"nodeType":"164","messageId":"165","endLine":10,"endColumn":52},{"ruleId":"162","severity":1,"message":"174","line":10,"column":54,"nodeType":"164","messageId":"165","endLine":10,"endColumn":58},{"ruleId":"162","severity":1,"message":"175","line":10,"column":68,"nodeType":"164","messageId":"165","endLine":10,"endColumn":72},{"ruleId":"162","severity":1,"message":"181","line":13,"column":5,"nodeType":"164","messageId":"165","endLine":13,"endColumn":14},{"ruleId":"162","severity":1,"message":"172","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":21},{"ruleId":"162","severity":1,"message":"173","line":15,"column":5,"nodeType":"164","messageId":"165","endLine":15,"endColumn":19},{"ruleId":"162","severity":1,"message":"183","line":68,"column":13,"nodeType":"164","messageId":"165","endLine":68,"endColumn":20},{"ruleId":"162","severity":1,"message":"184","line":5,"column":34,"nodeType":"164","messageId":"165","endLine":5,"endColumn":42},{"ruleId":"162","severity":1,"message":"176","line":7,"column":20,"nodeType":"164","messageId":"165","endLine":7,"endColumn":27},{"ruleId":"162","severity":1,"message":"177","line":7,"column":29,"nodeType":"164","messageId":"165","endLine":7,"endColumn":34},{"ruleId":"162","severity":1,"message":"185","line":7,"column":36,"nodeType":"164","messageId":"165","endLine":7,"endColumn":42},{"ruleId":"162","severity":1,"message":"179","line":7,"column":44,"nodeType":"164","messageId":"165","endLine":7,"endColumn":49},{"ruleId":"162","severity":1,"message":"168","line":7,"column":64,"nodeType":"164","messageId":"165","endLine":7,"endColumn":71},{"ruleId":"162","severity":1,"message":"174","line":7,"column":73,"nodeType":"164","messageId":"165","endLine":7,"endColumn":77},{"ruleId":"162","severity":1,"message":"181","line":10,"column":5,"nodeType":"164","messageId":"165","endLine":10,"endColumn":14},{"ruleId":"162","severity":1,"message":"172","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":21},{"ruleId":"162","severity":1,"message":"173","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":19},{"ruleId":"162","severity":1,"message":"182","line":24,"column":28,"nodeType":"164","messageId":"165","endLine":24,"endColumn":33},{"ruleId":"162","severity":1,"message":"186","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"187","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"188","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":18},{"ruleId":"162","severity":1,"message":"189","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":28},{"ruleId":"162","severity":1,"message":"176","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":17},{"ruleId":"162","severity":1,"message":"178","line":4,"column":19,"nodeType":"164","messageId":"165","endLine":4,"endColumn":25},{"ruleId":"162","severity":1,"message":"168","line":4,"column":40,"nodeType":"164","messageId":"165","endLine":4,"endColumn":47},{"ruleId":"162","severity":1,"message":"167","line":4,"column":69,"nodeType":"164","messageId":"165","endLine":4,"endColumn":75},{"ruleId":"162","severity":1,"message":"190","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":21},{"ruleId":"162","severity":1,"message":"176","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":2,"column":1,"nodeType":"193","endLine":9,"endColumn":2},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'SimpleGrid' is defined but never used.","'Button' is defined but never used.","'Heading' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'Flex' is defined but never used.","'Text' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'VStack' is defined but never used.","'Stack' is defined but never used.","'Spacer' is defined but never used.","'FormLabel' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'QUERY_ME' is defined but never used.","'HStack' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useQuery' is defined but never used.","'QUERY_GET_SECURITY' is defined but never used.","'breakpoints' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]